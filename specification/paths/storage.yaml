---
maps:
  get:
    summary: Return a list of all managed map files
    description: Returns a list of all managed map files
    operationId: getAllStorageMapFiles
    tags:
      - Storage
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/maps"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  post:  # (raw)
    summary: Creates a managed storage map file with its entries
    description: Creates a managed storage map file with its entries.
    operationId: createStorageMapFile
    consumes:
      - multipart/form-data
    parameters:
      - in: formData
        name: file_upload
        type: file
        description: The map file contents
        x-mimetype: text/plain
    tags:
      - Storage
    responses:
      '201':
        description: Map file created with its entries
        schema:
          $ref: "#/definitions/map"
      '409':
        $ref: '#/responses/AlreadyExists'
      '400':
        $ref: '#/responses/BadRequest'
      'default':
        $ref: '#/responses/DefaultError'
maps_one:
  get:
    summary: Return the contents of one managed map file from disk
    description: Returns the contents of one managed map file from disk
    operationId: getOneStorageMap
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: Map file storage_name
        required: true
        type: string
    produces:
      - application/octet-stream
    responses:
      '200':
        description: Successful operation
        schema:
          type: file
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  delete:
    summary: Deletes a managed map file from disk
    description: Deletes a managed map file from disk.
    operationId: deleteStorageMap
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: Map file storage_name
        required: true
        type: string
    responses:
      '204':
        description: Map file deleted
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  put:
    summary: Replace contents of a managed map file on disk
    description: Replaces the contents of a managed map file on disk
    operationId: replaceStorageMapFile
    produces:
      - application/json
    consumes:
      - text/plain
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: Map file storage_name
        required: true
        type: string
      - name: data
        in: body
        required: true
        schema:
          type: string
      - $ref: "#/parameters/skip_reload"
      - $ref: "#/parameters/force_reload"
    responses:
      "202":
        description: Configuration change accepted and reload requested
        headers:
          Reload-ID:
            description: ID of the requested reload
            type: string
      '204':
        description: Map file replaced
      '400':
        $ref: '#/responses/BadRequest'
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
ssl_certificates:
  get:
    summary: Return all available SSL certificates on disk
    description: Returns all available SSL certificates on disk.
    operationId: getAllStorageSSLCertificates
    tags:
      - Storage
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/ssl_certificates"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  post:
    summary: Create SSL certificate
    description: Creates SSL certificate.
    operationId: createStorageSSLCertificate
    consumes:
      - multipart/form-data
    parameters:
      - in: formData
        name: file_upload
        type: file
        description: The SSL certificate to upload
        x-mimetype: text/plain
      - $ref: "#/parameters/force_reload"
    tags:
      - Storage
    responses:
      '201':
        description: SSL certificate created
        schema:
          $ref: "#/definitions/ssl_certificate"
      '409':
        $ref: '#/responses/AlreadyExists'
      '400':
        $ref: '#/responses/BadRequest'
      'default':
        $ref: '#/responses/DefaultError'
ssl_certificates_one:
  get:
    summary: Return one SSL certificate from disk
    description: Returns one SSL certificate from disk.
    operationId: getOneStorageSSLCertificate
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: SSL certificate name
        required: true
        type: string
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/ssl_certificate"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  delete:
    summary: Delete SSL certificate from disk
    description: Deletes SSL certificate from disk.
    operationId: deleteStorageSSLCertificate
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: SSL certificate name
        required: true
        type: string
      - $ref: "#/parameters/skip_reload"
      - $ref: "#/parameters/force_reload"
    responses:
      '202':
        description: SSL certificate deleted and reload requested
        headers:
          Reload-ID:
            description: ID of the requested reload
            type: string
      '204':
        description: SSL certificate deleted
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  put:
    summary: Replace SSL certificates on disk
    description: Replaces SSL certificate on disk.
    operationId: replaceStorageSSLCertificate
    produces:
      - application/json
    consumes:
      - text/plain
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: SSL certificate name
        required: true
        type: string
      - name: data
        in: body
        required: true
        schema:
          type: string
      - $ref: "#/parameters/skip_reload"
      - $ref: "#/parameters/force_reload"
    responses:
      '200':
        description: SSL certificate replaced
        schema:
          $ref: "#/definitions/ssl_certificate"
      '202':
        description: SSL certificate replaced and reload requested
        headers:
          Reload-ID:
            description: ID of the requested reload
            type: string
        schema:
          $ref: "#/definitions/ssl_certificate"
      '400':
        $ref: '#/responses/BadRequest'
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
general_files:
  get:
    summary: Return a list of all managed general use files
    description: Returns a list of all managed general use files
    operationId: getAllStorageGeneralFiles
    tags:
      - Storage
    responses:
      '200':
        description: Successful operation
        schema:
          $ref: "#/definitions/general_files"
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  post:  # (raw)
    summary: Creates a managed storage general use file with contents
    description: Creates a managed storage general use file with contents.
    operationId: createStorageGeneralFile
    consumes:
      - multipart/form-data
    parameters:
      - in: formData
        name: file_upload
        type: file
        description: General use file content
        x-mimetype: text/plain
    tags:
      - Storage
    responses:
      '201':
        description: General use file created with its contents
        schema:
          $ref: "#/definitions/general_file"
      '409':
        $ref: '#/responses/AlreadyExists'
      '400':
        $ref: '#/responses/BadRequest'
      'default':
        $ref: '#/responses/DefaultError'
general_files_one:
  get:
    summary: Return the contents of one managed general use file from disk
    description: Returns the contents of one managed general use file from disk
    operationId: getOneStorageGeneralFile
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: General use file storage_name
        required: true
        type: string
    produces:
      - application/octet-stream
    responses:
      '200':
        description: Successful operation
        schema:
          type: file
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  delete:
    summary: Deletes a managed general use file from disk
    description: Deletes a managed general use file from disk.
    operationId: deleteStorageGeneralFile
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: General use file storage_name
        required: true
        type: string
    responses:
      '204':
        description: General use file deleted
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
  put:
    summary: Replace contents of a managed general use file on disk
    description: Replaces the contents of a managed general use file on disk
    operationId: replaceStorageGeneralFile
    produces:
      - application/json
    consumes:
      - text/plain
    tags:
      - Storage
    parameters:
      - name: name
        in: path
        description: General use file storage_name
        required: true
        type: string
      - name: data
        in: body
        required: true
        schema:
          type: string
      - $ref: "#/parameters/skip_reload"
      - $ref: "#/parameters/force_reload"
    responses:
      "202":
        description: Configuration change accepted and reload requested
        headers:
          Reload-ID:
            description: ID of the requested reload
            type: string
      '204':
        description: General use file replaced
      '400':
        $ref: '#/responses/BadRequest'
      '404':
        $ref: '#/responses/NotFound'
      'default':
        $ref: '#/responses/DefaultError'
